Menu="IPMI:3"
Title="Config Editor"
Markdown="false"
---
<link rel="stylesheet" href="/plugins/ipmi/css/codemirror/codemirror.min.css"/>
<link rel="stylesheet" href="/plugins/ipmi/css/codemirror/show-hint.min.css"/>
<link rel="stylesheet" href="/plugins/ipmi/css/codemirror/dialog.min.css"/>
<link rel="stylesheet" href="/plugins/ipmi/css/codemirror/dracula.min.css"/>
<style type="text/css">
    .CodeMirror { border: 1px solid #eee; cursor: text; margin-top: 15px; margin-bottom: 10px; }
    .CodeMirror pre.CodeMirror-placeholder { color: #999; }
    .fileTree{width:305px;max-height:150px;overflow:scroll;position:absolute;z-index:100;display:none;}
</style>

<div id="title" style="margin-top: -22px;">
    <span class="left"><img class="icon" src="/plugins/ipmi/icons/configeditor.png"> IPMI Configuration Editor</span>
</div>

<form id="autoload-form" method="POST" action="/update.php" target="progressFrame">
    <input type="hidden" id="autoload" name="LOADCFG" value="disable" />
    <input type="hidden" name="#file" value="ipmi/ipmi.cfg" />
    <input type="hidden" name="#command" value="" />
</form>

<blockquote class="inline_help">
    <p>IPMI Config Editor is used to get and set configuration parameters in IPMI. In can be used to configured usernames, passwords, networking information, security, Serial-over-LAN (SOL), Platform Event Filtering (PEF), boot devices, power restoration policy, and many more configuration options.</p>
    <p><b>Search Functions:</b></p>
    <dl>
    <dt>Ctrl-F / Cmd-F</dt>
    <dd>Start searching</dd>
    <dt>Ctrl-G / Cmd-G</dt>
    <dd>Find next</dd>
    <dt>Shift-Ctrl-G / Shift-Cmd-G</dt>
    <dd>Find previous</dd>
    <dt>Shift-Ctrl-F / Cmd-Option-F</dt>
    <dd>Replace</dd>
    <dt>Shift-Ctrl-R / Shift-Cmd-Option-F</dt>
    <dd>Replace all</dd>
    </dl>
</blockquote>

<form id="cfgform" method="POST">
<div style="margin-top: -10px;">
<span class="left">
    <select id="editfile" name="editfile">
        <option>Select Config...</option>
        <option>Config</option>
        <option>Sensors</option>
    </select>
</span>
<span class="status" style="margin-top: 5px;" id="load-switch" hidden><input type="checkbox" id="autoload-switch"></span>
</div>

<textarea id="editcfg" name="ipmicfg" placeholder="Select IPMI Configuration above." autocomplete="" focus></textarea>
<input type="hidden" id="commit" name="commit" value="1" />
<input type="hidden" id="ipmiconfig" name="config" value="1" />
<dl>
    <dt><input type="button" value="Revert" id="btnRevert" title="reset the stored IPMI config file to the existing BMC config" /></dt>
    <dd><input type="button" value="Save" id="btnSubmit" title="save IPMI configuration changes to the BMC" />
    <input type="button" value="Cancel" id="btnCancel" />
    <span><i class="fa fa-warning icon warning"></i> Edit Carefully!</span>
    </dd>
</form>
</dl>

<blockquote class="inline_help">
    <p>The Revert button resets the stored IPMI configuration file to the existing configuration loaded on the BMC.  The Save button saves IPMI configuration changes to the BMC.</p>
</blockquote>

<script src="/plugins/ipmi/js/codemirror/codemirror.min.js"></script>
<script src="/plugins/ipmi/js/codemirror/dialog.min.js"></script>
<script src="/plugins/ipmi/js/codemirror/placeholder.min.js"></script>
<script src="/plugins/ipmi/js/codemirror/show-hint.min.js"></script>
<script src="/plugins/ipmi/js/codemirror/properties.min.js"></script>
<script src="/plugins/ipmi/js/codemirror/anyword-hint.min.js"></script>
<script src="/plugins/ipmi/js/codemirror/searchcursor.min.js"></script>
<script src="/plugins/ipmi/js/codemirror/search.min.js"></script>

<script>
$(function(){
    //autoload switch
    $('#autoload-switch').switchButton({
        labels_placement: 'left',
        on_label: 'Load Config @ unRAID Start',
        off_label: 'Load Config @ unRAID Start',
        checked: ("<?=$loadcfg;?>" == 'enable')
    })
    .change(function () {
        setAutoLoad();
        $.post('/update.php', $('#autoload-form').serializeArray());
    });

    setAutoLoad();

    $('#btnCancel').click(function() {
        $.cookie('one', 'tab1', { expires:null, path: '/'});
        location = '/Settings/IPMI';
    });

    $('#editfile').on('change', function () {
        var Config = $('#editfile')[0].selectedIndex -1;

        if (Config == 1)
            $('#load-switch').show();
        else
            $('#load-switch').hide();

        if (Config != -1){
            $('#ipmiconfig').val(Config);
            $.post('/plugins/ipmi/include/ipmi_config.php', {ipmicfg:null, config:Config}, function (data) {
                    editor.setValue(data.config);
                },'json'
            );
        }else{
            editor.setValue('');
        }
    });

    var editor = CodeMirror.fromTextArea($('#editcfg')[0], {
        theme: '<?=($display["theme"] == 'white' || $display["theme"] == 'azure') ? "default" : "dracula";?>',
        mode: 'properties',
        lineNumbers: true,
        gutters: ['CodeMirror-linenumbers'],
        extraKeys: {
            'Ctrl-Space': 'autocomplete'
        },
        hintOptions: {}
    });

    $('#tab3').click(function () {
        editor.refresh();
    });

    // save config and commit to bmc
    $('#btnSubmit').click(function () {
        editor.save();
        commitConfig();
    });

    // revert saved config file to bmc stored config
    $('#btnRevert').click(revertConfig);
});


function commitConfig() {
    var Config = $('#editfile')[0].selectedIndex -1;
    if (Config != -1){
        $('#ipmiconfig').val(Config);
        $.post('/plugins/ipmi/include/ipmi_config.php', $('#cfgform').serializeArray(),function (data) {
            var Title = 'IPMI Sensors Configuration';

            if(data.success){
                swal({title:Title,text:'saved',type:'success',closeOnConfirm: true,},function() {
                    location = '/Settings/IPMI';
                });
            }

            if(data.error)
                swal({title:Title,text:data.error,type:'error'});

        }, 'json');
    }
}

function revertConfig() {
    var Config = $('#editfile')[0].selectedIndex -1;
    if (Config != -1){
        $.post('/plugins/ipmi/include/ipmi_config.php', {ipmicfg:null, config:Config}, function (data) {
            var Title = 'IPMI Sensors Configuration';

            if(data.success){
                swal({title:Title,text:'reloaded from bmc',type:'success',closeOnConfirm: true,},function() {
                    location.reload(true);
                });
            }

            if(data.error)
                swal({title:Title,text:data.error,type:'error'});

        }, 'json');
    }
}

function setAutoLoad() {
    if ($('#autoload-switch')[0].checked) {
        $('#autoload').val('enable');
    }else{
        $('#autoload').val('disable');
    }
}

</script>